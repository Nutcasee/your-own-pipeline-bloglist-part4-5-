{"version":3,"sources":["components/Blog.js","components/Notification.js","components/Togglable.js","components/LoginForm.js","components/BlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateLike","deleteBlog","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","data-cy","url","likes","id","user","name","Notification","notification","console","log","type","message","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","BlogForm","createBlog","newTitle","setTitle","newAuthor","setAuthor","newUrl","setUrl","event","preventDefault","target","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","deleting","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","setUsername","setPassword","setUser","setNotification","useEffect","blogService","sortedBlogs","mapSort","b","fetchData","loggedUserJSON","window","localStorage","getItem","JSON","parse","notifyWith","setTimeout","handleLogin","loginService","setItem","stringify","error","addBlog","blogObject","blogFormRef","current","returnedBlog","concat","find","changedBlog","updatedBlog","map","_id","confirm","filter","useRef","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9ba3603.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, updateLike, deleteBlog }) => {\r\n  // console.log('blog ', blog)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div style={hideWhenVisible} className=\"togglableContent\">\r\n        {blog.title} {blog.author}\r\n        <button onClick={toggleVisibility} data-cy=\"view\">view</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent2\">\r\n        <div>\r\n          {blog.title} {blog.author}\r\n          <button onClick={toggleVisibility}>hide</button>\r\n        </div>\r\n        <div>{blog.url}</div>\r\n        <div>\r\n          <span data-cy=\"likes\">{blog.likes}</span>\r\n          <button id=\"like-button\" onClick={() => updateLike(blog.id)}>like</button>\r\n        </div>\r\n        {blog.user ? blog.user.name\r\n          : null}\r\n        <div>\r\n          {blog.user\r\n            ? <button id=\"remove-button\" onClick={() => deleteBlog(blog.id)}>remove</button>\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  console.log('notification ', notification)\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>\r\n          {props.buttonLabel}\r\n        </button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm\r\n\r\n/* import React, { useState } from 'react'\r\nimport loginService from './services/login'\r\nimport blogService from './services/blogs'\r\n\r\nconst LoginForm = ({ props }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      notifyWith(`${user.name} is logged in`)\r\n\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      notifyWith('wrong username or password', 'error')\r\n      setUser(null)\r\n      setUsername('')\r\n      setPassword('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n      </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n*/","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setTitle] = useState('')\r\n  const [newAuthor, setAuthor] = useState('')\r\n  const [newUrl, setUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n          title\r\n          <input\r\n            id='title'\r\n            value={newTitle}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            id='author'\r\n            value={newAuthor}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            id='url'\r\n            value={newUrl}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button id=\"create-button\" type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n  /*\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n  */\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  console.log('config ', config)\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst deleting = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, deleting, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport mapSort from 'mapsort'\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  // const [newBlog, setNewBlog] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  // const [newTitle, setTitle] = useState('')\r\n  // const [newAuthor, setAuthor] = useState('')\r\n  // const [newUrl, setUrl] = useState('')\r\n  const [notification, setNotification] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const blogs = await blogService.getAll()\r\n      const sortedBlogs = mapSort(\r\n        blogs,\r\n        blog => blog.likes,\r\n        (a,b) => b - a)\r\n      console.log('sorted Blogs ', sortedBlogs)\r\n      setBlogs(sortedBlogs)\r\n    }\r\n    fetchData()\r\n\r\n    /*\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n    async function sortBlog() {\r\n      const blogs = await blogService.getAll()\r\n      return mapSort(\r\n        blogs,\r\n        blog => blog.likes,\r\n        (a,b) => b - a)\r\n    }\r\n    setBlogs(sortBlog())\r\n    */\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const notifyWith = (message, type='success') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      console.log('user server ', user)\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      notifyWith(`${user.name} is logged in`)\r\n\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (error) {\r\n      console.log(error.response.data.error)\r\n      notifyWith('wrong credentials', 'error')\r\n      /*\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      */\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    // window.localStorage.clear()\r\n    setUser(null)\r\n  }\r\n\r\n  const addBlog = async (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    try {\r\n      const returnedBlog = await blogService.create(blogObject)\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      // notifyWith(`a new blog ${newTitle} by ${newAuthor} added`)\r\n      // setNewBlog('')\r\n    } catch(error) {\r\n      console.log(error.response.data.error)\r\n      notifyWith(`${error.response.data.error} `, 'error')\r\n    }\r\n\r\n    /* blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        notifyWith(`a new blog ${newTitle} by ${newAuthor} added`)\r\n        // setNewBlog('')\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data.error)\r\n        notifyWith(`${error.response.data.error} `, 'error')\r\n      })\r\n    */\r\n  }\r\n\r\n  const updateLike = async (id) => {\r\n    let blog = blogs.find(blog => blog.id === id)\r\n    // console.log('changedBlog id ', id)\r\n    // console.log('blog old likes', blog.likes)\r\n\r\n    let changedBlog = { ...blog, likes: ++blog.likes }\r\n    console.log('changedBlog new likes', changedBlog.likes)\r\n\r\n    try {\r\n      const updatedBlog = await blogService.update(id, changedBlog)\r\n      console.log('updatedBlog new likes', updatedBlog.likes)\r\n      setBlogs(blogs.map(blog => blog._id !== id ? blog : updatedBlog))\r\n      // notifyWith(`a blog ${blog.title} by ${blog.author} updated`)\r\n    } catch(error) {\r\n      notifyWith(`${error.response.data.error} `, 'error')\r\n      // notifyWith(`Blog '${blog.title}' was already removed from server`, 'error')\r\n    }\r\n  }\r\n\r\n  const deleteBlog = async (id) => {\r\n    let blog = blogs.find(blog => blog.id === id)\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\r\n      try {\r\n        await blogService.deleting(id)\r\n        setBlogs(blogs.filter(blog => blog.id !== id))\r\n        notifyWith(`a blog ${blog.title} by ${blog.author} removed`)\r\n      } catch(error) {\r\n        notifyWith(`${error} `, 'error')\r\n        // notifyWith(`Blog '${blog.title}' was already removed from server`, 'error')\r\n      }\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='login'>\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const bloglist = () => (\r\n    <div>\r\n      <div>\r\n        {blogs.map(blog =>\r\n          <Blog key={blog.id} blog={blog}\r\n            updateLike={updateLike}\r\n            deleteBlog={deleteBlog}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n\r\n      {user === null\r\n        ?\r\n        <div>\r\n          <Notification notification={notification} />\r\n          {loginForm()}\r\n        </div>\r\n        :\r\n        <div>\r\n          <Notification notification={notification} />\r\n\r\n          <p>\r\n            {user.name} logged in\r\n            <button type=\"submit\" onClick={handleLogout}>logout</button>\r\n          </p>\r\n\r\n          {blogForm()}\r\n\r\n          {bloglist()}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}